%%
%% @doc This module is auto-generated by rebar3_egrpc_plugin.
%%
%% This module was generated on 2025-06-22T06:13:45+00:00 and should not be modified manually
%% @end

-module(egrpc_grpc_reflection_v1alpha_server_reflection_client).

-ignore_xref(egrpc_grpc_reflection_v1alpha_server_reflection_client).

-export([server_reflection_info/1, server_reflection_info/2]).

-define(GRPC_SERVICE_NAME, 'grpc.reflection.v1alpha.ServerReflection').

%% @doc Call the bidi_streaming RPC method `ServerReflectionInfo' of service `grpc.reflection.v1alpha.ServerReflection'.
-spec server_reflection_info(egrpc:channel()) -> Result when
    Result :: egrpc_stub:bidi_streaming_ret().
server_reflection_info(Channel) ->
    server_reflection_info(Channel, #{}).

-spec server_reflection_info(egrpc:channel(), Opts) -> Result when
    Result :: egrpc_stub:bidi_streaming_ret(),
    Opts :: egrpc_stub:opts().
server_reflection_info(Channel, Opts) ->
    RpcDef = egrpc_reflection_v1alpha_pb:find_rpc_def(?GRPC_SERVICE_NAME, 'ServerReflectionInfo'),
    Grpc = #{
        rpc_def => RpcDef,
        path => <<"/grpc.reflection.v1alpha.ServerReflection/ServerReflectionInfo">>,
        pb_module => egrpc_reflection_v1alpha_pb,
        service_name => ?GRPC_SERVICE_NAME
    },
    egrpc_stub:bidi_streaming(Channel, Grpc, Opts).
